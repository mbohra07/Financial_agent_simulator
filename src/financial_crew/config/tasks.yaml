simulate_cash_flow:
  description: >
    <<SYS>>
    You are a financial simulation assistant. Always respond ONLY with the final output.
    NEVER include prep statements like "Now I can answer", "Here's the result", or reasoning.
    Only output structured JSON.
    <</SYS>>
    Simulate monthly cash inflows and outflows for {user_name}, a {age}-year-old {occupation} 
    with a starting balance of ‚Çπ{starting_balance}, over a {months}-month period. 
    Categories include food, rent, transport, entertainment, salary, freelance income, etc. 
    Consider a moderate income level of ‚Çπ{income_level}.

    Introduce:
    - Emotional spending triggers like retail therapy, FOMO-driven purchases, or guilt spending.
    - Life events such as job loss, medical emergencies, or investment windfalls.
    - Behavior shifts due to stress, confidence, or fear (e.g., skipping savings, overcompensating after loss).
    - Unexpected income events like surprise bonuses or birthday gifts.

    The emotional_bias_agent must simulate irrational cash flow behavior on select months to test financial discipline under pressure.

  expected_output: >
    Return only a structured JSON object for the full {months}-month simulation, including all inflows, outflows, and balance details. 
    Exclude any additional text or explanations, as this output will be parsed directly by my backend functionality.

    [
      {
        "date": "YYYY-MM-DD",
        "inflows": {
          "salary": ‚Çπ,
          "freelance": ‚Çπ,
          "investment_return": ‚Çπ,
          "unexpected_income": ‚Çπ
        },
        "outflows": {
          "rent": ‚Çπ,
          "groceries": ‚Çπ,
          "transport": ‚Çπ,
          "entertainment": ‚Çπ,
          "impulse_spending": ‚Çπ,
          "medical": ‚Çπ,
          "guilt_spending": ‚Çπ,
          "retail_therapy": ‚Çπ
        },
        "balance": ‚Çπ
      },
      ...
    ]

  agent: emotional_bias_agent
  frequency: monthly
  output_file: output/simulated_cashflow.json
  retry_policy:
    max_retries: 3
    retry_interval: 60s
    
evaluate_spending:
  description: >
    <<SYS>>
    You are a financial simulation assistant. Always respond ONLY with the final output.
    NEVER include prep statements like "Now I can answer", "Here's the result", or reasoning.
    Output must match the format shown below.
    <</SYS>>
    Analyze {user_name}‚Äôs cash flow simulation stored in JSON format to identify inefficient spending patterns.
    Tailor the advice based on their occupation as a {occupation}, monthly income of ‚Çπ{income_level}, and financial goal of "{goal}".
    Use economic principles like opportunity cost, budget allocation, and utility curves to guide the analysis.
    Provide actionable advice that improves savings while keeping essential expenses intact.

  expected_output: >
    Provide a detailed **bullet-point** summary including:
    1. Top 3 wasteful or low-utility discretionary expenses (mention ‚Çπ amounts).
    2. Overspending categories compared to benchmark values for a {occupation}.
    3. Monthly savings rate (%) and suggested improvements to boost it.
    4. Simple habit-change tips or automation suggestions for {user_name} to build consistent savings behavior.

    üí° Format your response exactly like the example below:
    ```
    üí° Spending Review & Suggestions for {user_name}:

    - High food delivery expenses (‚Çπ3200/month) ‚Üí Suggest: Weekly cooking challenge (save ‚Çπ2000)
    - Entertainment exceeded 15% benchmark ‚Üí Tip: Cancel one subscription (save ‚Çπ500)
    - Impulse spends on 4 occasions ‚Üí Tip: 24-hour pause rule (reduce impulse purchases)
    - Savings rate: 6% ‚Üí Aim for 15% by setting up an auto-transfer to savings on salary day
    ```

  agent: spending_advisor
  context:
    - simulate_cash_flow
  output_file: output/spending_review.md

track_goals:
  description: >
    <SYS>>
    You are a financial simulation assistant. Always respond ONLY with the final output.
    NEVER include prep statements like "Now I can answer", "Here's the result", or reasoning.
    Output must match the format shown below.
    <</SYS>>
    Evaluate {user_name}‚Äôs progress toward the financial goal: "{goal}". 
    Use the {months}-month simulation data (cash flow, expenses, savings) to estimate trajectory. 
    Tailor projections to their income of ‚Çπ{income_level}, current savings behavior, and starting balance of ‚Çπ{starting_balance}.
  expected_output: >
    Provide a compact financial progress summary with:
    1. % of goal achieved so far
    2. Projected savings by end of simulation
    3. Estimated time to reach the goal
    4. Personalized advice for {user_name} (e.g., cutting entertainment, boosting freelance work)
    Format:
    üìä Goal Progress Summary:
    - Goal: "{goal}"
    - Achieved: X% of goal
    - Projected trajectory: ‚Çπ[expected amount] by [Month]
    - Time to goal: [X] months
    - Recommendations:
      ‚Ä¢ Try earning ‚Çπ1000/month via freelancing
      ‚Ä¢ Reduce entertainment budget by 10%
  agent: goal_tracker
  context:
    - simulate_cash_flow
    - evaluate_spending
  output_file: output/goal_tracking.md
  retry_policy:
    max_retries: 3
    retry_interval: 60s

monthly_summary:
  description: >
    <<SYS>>
    You are a financial simulation assistant. Always respond ONLY with the final output.
    NEVER include prep statements like "Now I can answer", "Here's the result", or reasoning.
    Output must match the format shown below.
    <</SYS>>
    Create a final summary for {user_name} ({age}, {occupation}), reviewing the entire financial simulation. 
    Include financial outcomes, emotional behavior patterns, and progress toward the goal: "{goal}". 
    Encourage long-term learning and motivate improvement based on the user's lifestyle and profile.
  expected_output: >
    Generate a markdown report for {user_name} with:
    1. Opening balance: ‚Çπ{starting_balance} | Closing balance after {months} months
    2. Total savings (‚Çπ + %)
    3. Summary of life events (e.g., job loss, sudden income, impulse spending)
    4. Goal progress (‚úì if achieved or ‚úó if not) with % and time estimate
    5. Key behavioral insights and suggestions for improvement
    6. A motivational mentor message with 2‚Äì3 clear tips
    Format:
    ```
    üìò Monthly Financial Summary for {user_name}

    üí∞ Account Summary:
    - Opening Balance: ‚Çπ{starting_balance}
    - Closing Balance: ‚Çπ
    - Net Saved: ‚Çπ (X%)

    üåê Life Events:
    - [Date]: [Event]

    üéØ Goal Status:
    - Goal: "{goal}"
    - Achieved: X% | Time left: Y months

    üß† Behavior Insights:
    - Improved control over {top category}
    - Impulse spending detected on [N] days
    - Tip: [Relevant advice]

    üí¨ Mentor Message:
    > ‚ÄúWell done, {user_name}! You‚Äôre progressing well. To level up, try controlling entertainment spend and boost savings with automation.‚Äù
    ```
  agent: mentor_agent
  context:
    - simulate_cash_flow
    - evaluate_spending
    - track_goals
  output_file: output/report.md
  retry_policy:
    max_retries: 3
    retry_interval: 60s